{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\react\\\\lesson 56 form handling errors\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameInputBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputEmailError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailInputBlurHandler\n  } = useInput(value => value.includes('@'));\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSumbitNudler = e => {\n    e.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n  };\n\n  const nameInputClasses = nameInputError ? 'form-control error-text' : 'form-control';\n  const emailInputClasses = emailInputEmailError ? 'form-control error-text' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSumbitNudler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: nameInputBlurHandler,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), nameInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: emailInputBlurHandler,\n        type: \"text\",\n        id: \"name\",\n        onChange: emailChangeHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), email && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"TH2vKsEuVKXFRRn8tKfnXmg+T8g=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/Рабочий стол/react/lesson 56 form handling errors/01-starting-project/src/components/SimpleInput.js"],"names":["useInput","SimpleInput","props","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameInputBlurHandler","trim","enteredEmail","enteredEmailIsValid","emailInputEmailError","emailChangeHandler","emailInputBlurHandler","includes","formIsValid","formSumbitNudler","e","preventDefault","nameInputClasses","emailInputClasses","email"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,oBAArB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AACJC,IAAAA,KAAK,EAAEC,WADH;AAEJC,IAAAA,OAAO,EAAEC,kBAFL;AAGJC,IAAAA,QAAQ,EAAEC,cAHN;AAIJC,IAAAA,kBAAkB,EAAEC,iBAJhB;AAKJC,IAAAA,gBAAgB,EAAEC;AALd,MAMFZ,QAAQ,CAAEG,KAAD,IAAWA,KAAK,CAACU,IAAN,OAAiB,EAA7B,CANZ;AAQA,QAAM;AACJV,IAAAA,KAAK,EAAEW,YADH;AAEJT,IAAAA,OAAO,EAAEU,mBAFL;AAGJR,IAAAA,QAAQ,EAAES,oBAHN;AAIJP,IAAAA,kBAAkB,EAAEQ,kBAJhB;AAKJN,IAAAA,gBAAgB,EAAEO;AALd,MAMFlB,QAAQ,CAAEG,KAAD,IAAWA,KAAK,CAACgB,QAAN,CAAe,GAAf,CAAZ,CANZ;AAQA,MAAIC,WAAW,GAAG,KAAlB;;AAEA,MAAId,kBAAkB,IAAIS,mBAA1B,EAA+C;AAC7CK,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI,CAACjB,kBAAL,EAAyB;AACvB;AACD;AACF,GAND;;AAQA,QAAMkB,gBAAgB,GAAGhB,cAAc,GACnC,yBADmC,GAEnC,cAFJ;AAIA,QAAMiB,iBAAiB,GAAGT,oBAAoB,GAC1C,yBAD0C,GAE1C,cAFJ;AAGA,sBACE;AAAM,IAAA,QAAQ,EAAEK,gBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEG,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,MAAM,EAAEZ,oBADV;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,QAAQ,EAAEF,iBAJZ;AAKE,QAAA,KAAK,EAAEN;AALT;AAAA;AAAA;AAAA;AAAA,cAFF,EASGI,cAAc,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATrB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,CAACY,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF,eAgBE;AAAK,MAAA,SAAS,EAAEK,iBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,MAAM,EAAEP,qBADV;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,QAAQ,EAAED,kBAJZ;AAKE,QAAA,KAAK,EAAEH;AALT;AAAA;AAAA;AAAA;AAAA,cAFF,EASGY,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,eA2BE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,CAACN,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAvED;;GAAMnB,W;UAOAD,Q,EAQAA,Q;;;KAfAC,W;AAyEN,eAAeA,WAAf","sourcesContent":["import useInput from '../hooks/use-input';\r\n\r\nconst SimpleInput = (props) => {\r\n  const {\r\n    value: enteredName,\r\n    isValid: enteredNameIsValid,\r\n    hasError: nameInputError,\r\n    valueChangeHandler: nameChangeHandler,\r\n    inputBlurHandler: nameInputBlurHandler,\r\n  } = useInput((value) => value.trim() !== '');\r\n\r\n  const {\r\n    value: enteredEmail,\r\n    isValid: enteredEmailIsValid,\r\n    hasError: emailInputEmailError,\r\n    valueChangeHandler: emailChangeHandler,\r\n    inputBlurHandler: emailInputBlurHandler,\r\n  } = useInput((value) => value.includes('@'));\r\n\r\n  let formIsValid = false;\r\n\r\n  if (enteredNameIsValid && enteredEmailIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formSumbitNudler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!enteredNameIsValid) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const nameInputClasses = nameInputError\r\n    ? 'form-control error-text'\r\n    : 'form-control';\r\n\r\n  const emailInputClasses = emailInputEmailError\r\n    ? 'form-control error-text'\r\n    : 'form-control';\r\n  return (\r\n    <form onSubmit={formSumbitNudler}>\r\n      <div className={nameInputClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          onBlur={nameInputBlurHandler}\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={nameChangeHandler}\r\n          value={enteredName}\r\n        />\r\n        {nameInputError && <p>Name must not be empty</p>}\r\n      </div>\r\n      <div className=\"form-actions\">\r\n        <button disabled={!formIsValid}>Submit</button>\r\n      </div>\r\n\r\n      <div className={emailInputClasses}>\r\n        <label htmlFor=\"name\">Your Email</label>\r\n        <input\r\n          onBlur={emailInputBlurHandler}\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={emailChangeHandler}\r\n          value={enteredEmail}\r\n        />\r\n        {email && <p>Name must not be empty</p>}\r\n      </div>\r\n      <div className=\"form-actions\">\r\n        <button disabled={!formIsValid}>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SimpleInput;\r\n"]},"metadata":{},"sourceType":"module"}