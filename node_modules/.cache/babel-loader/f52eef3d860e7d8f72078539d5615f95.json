{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\react\\\\lesson 56 form handling errors\\\\01-starting-project\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameInputBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredLast,\n    isValid: enteredLastIsValid,\n    hasError: lastInputError,\n    valueChangeHandler: lastChangeHandler,\n    inputBlurHandler: lastInputBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: entereEmailIsValid,\n    hasError: emailInputError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler\n  } = useInput(value => value.trim() !== '@');\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredLastIsValid && entereEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSumbitNudler = e => {\n    e.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n  };\n\n  const nameInputClasses = nameInputError ? 'form-control error-text' : 'form-control';\n  const lastInputClasses = lastInputError ? 'form-control error-text' : 'form-control';\n  const emailInputClasses = emailInputError ? 'form-control error-text' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSumbitNudler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onBlur: nameInputBlurHandler,\n          onChange: nameChangeHandler,\n          type: \"text\",\n          id: \"name\",\n          value: enteredName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), nameInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0418\\u043C\\u044F \\u043D\\u0435 \\u0434\\u043E\\u043B\\u0436\\u043D\\u043E \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onBlur: lastInputBlurHandler,\n          onChange: lastChangeHandler,\n          value: enteredLast,\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), lastInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F \\u043D\\u0435 \\u0434\\u043E\\u043B\\u0436\\u043D\\u043E \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: emailBlurHandler,\n        onChange: emailChangeHandler,\n        value: enteredEmail,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), emailInputError && /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"2N5jcGNJNBvwCzzuAli76F8Wcuw=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/Рабочий стол/react/lesson 56 form handling errors/01-starting-project/src/components/BasicForm.js"],"names":["React","useInput","BasicForm","props","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameInputBlurHandler","trim","enteredLast","enteredLastIsValid","lastInputError","lastChangeHandler","lastInputBlurHandler","enteredEmail","entereEmailIsValid","emailInputError","emailChangeHandler","emailBlurHandler","formIsValid","formSumbitNudler","e","preventDefault","nameInputClasses","lastInputClasses","emailInputClasses"],"mappings":"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","sourcesContent":["import React from 'react';\nimport useInput from '../hooks/use-input';\n\nconst BasicForm = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameInputBlurHandler,\n  } = useInput((value) => value.trim() !== '');\n  const {\n    value: enteredLast,\n    isValid: enteredLastIsValid,\n    hasError: lastInputError,\n    valueChangeHandler: lastChangeHandler,\n    inputBlurHandler: lastInputBlurHandler,\n  } = useInput((value) => value.trim() !== '');\n\n  const {\n    value: enteredEmail,\n    isValid: entereEmailIsValid,\n    hasError: emailInputError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n  } = useInput((value) => value.trim() !== '@');\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredLastIsValid && entereEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSumbitNudler = (e) => {\n    e.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n  };\n\n  const nameInputClasses = nameInputError\n    ? 'form-control error-text'\n    : 'form-control';\n  const lastInputClasses = lastInputError\n    ? 'form-control error-text'\n    : 'form-control';\n  const emailInputClasses = emailInputError\n    ? 'form-control error-text'\n    : 'form-control';\n  return (\n    <form onSubmit={formSumbitNudler}>\n      <div className=\"control-group\">\n        <div className={nameInputClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            onBlur={nameInputBlurHandler}\n            onChange={nameChangeHandler}\n            type=\"text\"\n            id=\"name\"\n            value={enteredName}\n          />\n          {nameInputError && <p>Имя не должно быть пустым</p>}\n        </div>\n        <div className={lastInputClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            onBlur={lastInputBlurHandler}\n            onChange={lastChangeHandler}\n            value={enteredLast}\n            type=\"text\"\n            id=\"name\"\n          />\n          {lastInputError && <p>Фамилия не должно быть пустым</p>}\n        </div>\n      </div>\n      <div className=\"form-control\">\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          onBlur={emailBlurHandler}\n          onChange={emailChangeHandler}\n          value={enteredEmail}\n          type=\"text\"\n          id=\"name\"\n        />\n      </div>\n      {emailInputError && <p></p>}\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}