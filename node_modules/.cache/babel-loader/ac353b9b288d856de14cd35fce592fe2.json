{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react/cjs/react.development';\n\nconst useInput = () => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = e => {\n    setEnteredValue(e.target.value);\n  };\n\n  const inputBlurHandler = () => {\n    setIsTouched(true);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError: hasError,\n    valueChangeHandler,\n    inputBlurHandler\n  };\n};\n\n_s(useInput, \"uN9KnldpqRIT2LwByiGz+Mp8wEw=\");\n\nexport default useInput;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Рабочий стол/react/lesson 56 form handling errors/01-starting-project/src/hooks/use-input.js"],"names":["React","useState","useInput","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","validateValue","hasError","valueChangeHandler","e","target","value","inputBlurHandler","isValid"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,6BAAzB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMM,YAAY,GAAGC,aAAa,CAACL,YAAD,CAAlC;AACA,QAAMM,QAAQ,GAAG,CAACF,YAAD,IAAiBF,SAAlC;;AAEA,QAAMK,kBAAkB,GAAIC,CAAD,IAAO;AAChCP,IAAAA,eAAe,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BR,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,SAAO;AACLO,IAAAA,KAAK,EAAEV,YADF;AAELY,IAAAA,OAAO,EAAER,YAFJ;AAGLE,IAAAA,QAAQ,EAAEA,QAHL;AAILC,IAAAA,kBAJK;AAKLI,IAAAA;AALK,GAAP;AAOD,CAtBD;;GAAMZ,Q;;AAwBN,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react/cjs/react.development';\r\n\r\nconst useInput = () => {\r\n  const [enteredValue, setEnteredValue] = useState('');\r\n  const [isTouched, setIsTouched] = useState(false);\r\n\r\n  const valueIsValid = validateValue(enteredValue);\r\n  const hasError = !valueIsValid && isTouched;\r\n\r\n  const valueChangeHandler = (e) => {\r\n    setEnteredValue(e.target.value);\r\n  };\r\n\r\n  const inputBlurHandler = () => {\r\n    setIsTouched(true);\r\n  };\r\n\r\n  return {\r\n    value: enteredValue,\r\n    isValid: valueIsValid,\r\n    hasError: hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n"]},"metadata":{},"sourceType":"module"}